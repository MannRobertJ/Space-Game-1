{"ast":null,"code":"import _classCallCheck from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js\";\nimport React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport { Circle, Group, Rect, Shape, Star } from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\nvar MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\nvar imageUrl = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/ship.png\";\n\nvar Ball =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Ball, _PureComponent);\n\n  function Ball() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ball);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ball)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      color: _this.props.color,\n      x: MIN_X,\n      y: MIN_Y,\n      direction: {\n        x: 0,\n        y: 0\n      },\n      fillPatternImage: null\n    };\n\n    _this.newCoord = function (val, delta, max, min) {\n      var newVal = val + delta;\n      var newDelta = delta;\n\n      if (newVal > max) {\n        newVal = min + newVal - max;\n      }\n\n      if (newVal < min) {\n        newVal = max - newVal;\n      }\n\n      return {\n        val: newVal,\n        delta: newDelta\n      };\n    };\n\n    _this.animate = function () {\n      var _this$state = _this.state,\n          x = _this$state.x,\n          y = _this$state.y,\n          _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          vertical = _this$props.vertical;\n\n      if (horizontal !== 0 || vertical !== 0) {\n        var newX = _this.newCoord(x, horizontal, MAX_X, MIN_X);\n\n        var newY = _this.newCoord(y, vertical, MAX_Y, MIN_Y); //console.log(newX, newY);\n\n\n        _this.setState({\n          x: newX.val,\n          y: newY.val,\n          direction: {\n            x: newX.delta,\n            y: newY.delta\n          }\n        });\n      }\n\n      _this.animationTimeout = setTimeout(_this.animate, 50);\n    };\n\n    _this.rotateShape = function () {\n      /*  const angularSpeed = 90;\n        let anim =new Konva.Animation((frame)=>{\n            let angleDiff = frame.timeDiff * angularSpeed /1000;\n        })\n        anim.start();*/\n    };\n\n    return _this;\n  }\n\n  _createClass(Ball, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          color = _this$state2.color,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      return React.createElement(Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Star, {\n        ref: function ref(node) {\n          _this2.str = node;\n        },\n        x: x,\n        y: y,\n        innerRadius: 10,\n        outerRadius: 20,\n        numPoints: 3,\n        fill: color,\n        rotate: this.rotateShape(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.animationTimeout);\n    }\n  }]);\n\n  return Ball;\n}(PureComponent);\n\nexport { Ball as default };","map":{"version":3,"sources":["/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js"],"names":["React","PureComponent","Konva","Circle","Group","Rect","Shape","Star","WIDTH","HEIGHT","MIN_X","MIN_Y","MAX_X","MAX_Y","SPEED","imageUrl","Ball","state","color","props","x","y","direction","fillPatternImage","newCoord","val","delta","max","min","newVal","newDelta","animate","horizontal","vertical","newX","newY","setState","animationTimeout","setTimeout","rotateShape","node","str","clearTimeout"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport {Circle, Group, Rect, Shape, Star} from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\n\nconst MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\n\nconst imageUrl = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/ship.png\";\n\nexport default class Ball extends PureComponent {\n\n    state = {\n        color: this.props.color,\n        x: MIN_X,\n        y: MIN_Y,\n        direction: { x: 0, y: 0 },\n        fillPatternImage: null\n    };\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    newCoord = (val, delta, max, min) => {\n        let newVal = val + delta;\n        let newDelta = delta;\n\n        if(newVal > max){\n            newVal = min + newVal - max\n        }\n\n        if(newVal < min ){\n            newVal = max - newVal\n        }\n\n        return { val: newVal, delta: newDelta };\n    };\n\n    animate = () => {\n        const { x, y } = this.state,\n            { horizontal, vertical } = this.props;\n\n        if (horizontal !== 0 || vertical !== 0) {\n            const newX = this.newCoord(x, horizontal, MAX_X, MIN_X);\n            const newY = this.newCoord(y, vertical, MAX_Y, MIN_Y);\n\n            //console.log(newX, newY);\n\n            this.setState({\n                x: newX.val,\n                y: newY.val,\n                direction: {\n                    x: newX.delta,\n                    y: newY.delta\n                }\n            });\n        }\n\n        this.animationTimeout = setTimeout(this.animate, 50);\n    };\n\n    rotateShape = () =>{\n      /*  const angularSpeed = 90;\n        let anim =new Konva.Animation((frame)=>{\n            let angleDiff = frame.timeDiff * angularSpeed /1000;\n        })\n        anim.start();*/\n    };\n\n    render() {\n        const { color, x, y } = this.state;\n\n        return (\n            <Group>\n                <Star\n                    ref={node =>{\n                        this.str=node;\n                    }}\n                    x={x}\n                    y={y}\n                    innerRadius={10}\n                    outerRadius={20}\n                    numPoints={3}\n                    fill={color}\n                    rotate={this.rotateShape()}\n                />\n            </Group>\n        );\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.animationTimeout);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
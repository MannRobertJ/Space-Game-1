{"ast":null,"code":"import _classCallCheck from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js\";\nimport React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport { Circle, Image } from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\nvar MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\n\nvar shipImage = function shipImage() {\n  var _useImage = useImage('https://png.pngtree.com/svg/20170706/cruise_ship_428210.png'),\n      _useImage2 = _slicedToArray(_useImage, 1),\n      image = _useImage2[0];\n\n  return React.createElement(Image, {\n    image: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nvar Ball =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Ball, _PureComponent);\n\n  function Ball() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ball);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ball)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      color: _this.props.color,\n      x: MIN_X,\n      y: MIN_Y,\n      direction: {\n        x: 0,\n        y: 0\n      },\n      image: null\n    };\n\n    _this.newCoord = function (val, delta, max, min) {\n      var newVal = val + delta;\n      var newDelta = delta;\n\n      if (newVal > max) {\n        newVal = min + newVal - max;\n      }\n\n      if (newVal < min) {\n        newVal = max - newVal;\n      }\n\n      return {\n        val: newVal,\n        delta: newDelta\n      };\n    };\n\n    _this.animate = function () {\n      var _this$state = _this.state,\n          x = _this$state.x,\n          y = _this$state.y,\n          _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          vertical = _this$props.vertical;\n\n      if (horizontal !== 0 || vertical !== 0) {\n        var newX = _this.newCoord(x, horizontal, MAX_X, MIN_X);\n\n        var newY = _this.newCoord(y, vertical, MAX_Y, MIN_Y); //console.log(newX, newY);\n\n\n        _this.setState({\n          x: newX.val,\n          y: newY.val,\n          direction: {\n            x: newX.delta,\n            y: newY.delta\n          }\n        });\n      }\n\n      _this.animationTimeout = setTimeout(_this.animate, 50);\n    };\n\n    return _this;\n  }\n\n  _createClass(Ball, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          color = _this$state2.color,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      return React.createElement(Image, {\n        x: x,\n        y: y,\n        image: this.state.image,\n        ref: function ref(node) {\n          _this2.imageNode = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.animationTimeout);\n    }\n  }]);\n\n  return Ball;\n}(PureComponent);\n/*  <Circle\n                ref={comp => {\n                    this.ball = comp;\n                }}\n                x={x}\n                y={y}\n                radius={10}\n                fill={color}\n                shadowBlur={1}\n            >*/\n\n\nexport { Ball as default };","map":{"version":3,"sources":["/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js"],"names":["React","PureComponent","Konva","Circle","Image","WIDTH","HEIGHT","MIN_X","MIN_Y","MAX_X","MAX_Y","SPEED","shipImage","useImage","image","Ball","state","color","props","x","y","direction","newCoord","val","delta","max","min","newVal","newDelta","animate","horizontal","vertical","newX","newY","setState","animationTimeout","setTimeout","node","imageNode","clearTimeout"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport { Circle, Image } from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\n\nconst MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\n\nconst shipImage = () => {\n    const [image] = useImage('https://png.pngtree.com/svg/20170706/cruise_ship_428210.png');\n    return <Image image={image} />\n};\n\nexport default class Ball extends PureComponent {\n    state = {\n        color: this.props.color,\n        x: MIN_X,\n        y: MIN_Y,\n        direction: { x: 0, y: 0 },\n        image: null\n    };\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    newCoord = (val, delta, max, min) => {\n        let newVal = val + delta;\n        let newDelta = delta;\n\n        if(newVal > max){\n            newVal = min + newVal - max\n        }\n\n        if(newVal < min ){\n            newVal = max - newVal\n        }\n\n        return { val: newVal, delta: newDelta };\n    };\n\n    animate = () => {\n        const { x, y } = this.state,\n            { horizontal, vertical } = this.props;\n\n        if (horizontal !== 0 || vertical !== 0) {\n            const newX = this.newCoord(x, horizontal, MAX_X, MIN_X);\n            const newY = this.newCoord(y, vertical, MAX_Y, MIN_Y);\n\n            //console.log(newX, newY);\n\n            this.setState({\n                x: newX.val,\n                y: newY.val,\n                direction: {\n                    x: newX.delta,\n                    y: newY.delta\n                }\n            });\n        }\n\n        this.animationTimeout = setTimeout(this.animate, 50);\n    };\n\n    render() {\n        const { color, x, y } = this.state;\n\n        return (\n            <Image\n                x={x}\n                y={y}\n                image={this.state.image}\n                ref={node => {\n                    this.imageNode = node;\n                }}\n            />\n        );\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.animationTimeout);\n    }\n}\n\n/*  <Circle\n                ref={comp => {\n                    this.ball = comp;\n                }}\n                x={x}\n                y={y}\n                radius={10}\n                fill={color}\n                shadowBlur={1}\n            >*/"]},"metadata":{},"sourceType":"module"}
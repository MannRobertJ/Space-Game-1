{"ast":null,"code":"import _classCallCheck from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eminebahce/Desktop/Development/Game/client/game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js\";\nimport React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport { Circle, Group, Rect, Shape } from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\nvar MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\nvar imageUrl = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/ship.png\";\n\nvar Ball =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Ball, _PureComponent);\n\n  function Ball() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ball);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ball)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.newCoord = function (val, delta, max, min) {\n      var newVal = val + delta;\n      var newDelta = delta;\n\n      if (newVal > max) {\n        newVal = min + newVal - max;\n      }\n\n      if (newVal < min) {\n        newVal = max - newVal;\n      }\n\n      return {\n        val: newVal,\n        delta: newDelta\n      };\n    };\n\n    _this.animate = function () {\n      var _this$state = _this.state,\n          x = _this$state.x,\n          y = _this$state.y,\n          _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          vertical = _this$props.vertical;\n\n      if (horizontal !== 0 || vertical !== 0) {\n        var newX = _this.newCoord(x, horizontal, MAX_X, MIN_X);\n\n        var newY = _this.newCoord(y, vertical, MAX_Y, MIN_Y); //console.log(newX, newY);\n\n\n        _this.setState({\n          x: newX.val,\n          y: newY.val,\n          direction: {\n            x: newX.delta,\n            y: newY.delta\n          }\n        });\n      }\n\n      _this.animationTimeout = setTimeout(_this.animate, 50);\n    };\n\n    var image = new window.Image();\n\n    image.onload = function () {\n      _this.setState({\n        fillPatternImage: image\n      });\n    };\n\n    image.src = imageUrl;\n    _this.state = {\n      color: _this.props.color,\n      x: MIN_X,\n      y: MIN_Y,\n      direction: {\n        x: 0,\n        y: 0\n      },\n      fillPatternImage: null\n    };\n    return _this;\n  }\n\n  _createClass(Ball, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          color = _this$state2.color,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      return React.createElement(Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Circle, {\n        x: x,\n        y: y,\n        radius: 10,\n        shadowBlur: 1,\n        fill: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        x: x,\n        y: y,\n        radius: 10,\n        shadowBlur: 1,\n        fillPatternImage: this.state.fillPatternImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.animationTimeout);\n    }\n  }]);\n\n  return Ball;\n}(PureComponent);\n/**\n * ref={comp => {\n                        this.ball = comp;\n                    }}\n <Group>\n <Rect\n x={0}\n y={0}\n width={WIDTH}\n height={HEIGHT}\n fill=\"rgb(0,0,0)\"\n shadowBlur={2}\n />\n <Rect\n x={2}\n y={2}\n width={WIDTH - 4}\n height={HEIGHT - 4}\n fillPatternImage={this.state.fillPatternImage}\n />\n </Group>\n\n\n */\n\n\nexport { Ball as default };","map":{"version":3,"sources":["/Users/eminebahce/Desktop/Development/Game/client/game/src/components/Ball.js"],"names":["React","PureComponent","Konva","Circle","Group","Rect","Shape","WIDTH","HEIGHT","MIN_X","MIN_Y","MAX_X","MAX_Y","SPEED","imageUrl","Ball","args","newCoord","val","delta","max","min","newVal","newDelta","animate","state","x","y","props","horizontal","vertical","newX","newY","setState","direction","animationTimeout","setTimeout","image","window","Image","onload","fillPatternImage","src","color","clearTimeout"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Konva from \"konva\";\nimport {Circle, Group, Rect, Shape} from \"react-konva\";\nimport { WIDTH, HEIGHT } from \"./Field\";\n\nconst MIN_X = 12,\n    MIN_Y = 12,\n    MAX_X = WIDTH - MIN_X,\n    MAX_Y = HEIGHT - MIN_Y,\n    SPEED = 30;\n\nconst imageUrl = \"/Users/eminebahce/Desktop/Development/Game/client/game/src/ship.png\";\n\nexport default class Ball extends PureComponent {\n\n    constructor(...args) {\n        super(...args);\n        const image = new window.Image();\n        image.onload = () => {\n            this.setState({\n                fillPatternImage: image\n            });\n        };\n        image.src = imageUrl;\n        this.state = {\n            color: this.props.color,\n            x: MIN_X,\n            y: MIN_Y,\n            direction: { x: 0, y: 0 },\n            fillPatternImage: null\n        };\n    }\n\n    componentDidMount() {\n        this.animate();\n    }\n\n    newCoord = (val, delta, max, min) => {\n        let newVal = val + delta;\n        let newDelta = delta;\n\n        if(newVal > max){\n            newVal = min + newVal - max\n        }\n\n        if(newVal < min ){\n            newVal = max - newVal\n        }\n\n        return { val: newVal, delta: newDelta };\n    };\n\n    animate = () => {\n        const { x, y } = this.state,\n            { horizontal, vertical } = this.props;\n\n        if (horizontal !== 0 || vertical !== 0) {\n            const newX = this.newCoord(x, horizontal, MAX_X, MIN_X);\n            const newY = this.newCoord(y, vertical, MAX_Y, MIN_Y);\n\n            //console.log(newX, newY);\n\n            this.setState({\n                x: newX.val,\n                y: newY.val,\n                direction: {\n                    x: newX.delta,\n                    y: newY.delta\n                }\n            });\n        }\n        this.animationTimeout = setTimeout(this.animate, 50);\n    };\n\n    render() {\n        const { color, x, y } = this.state;\n\n        return (\n            <Group>\n                <Circle\n                    x={x}\n                    y={y}\n                    radius={10}\n                    shadowBlur={1}\n                    fill={color}\n                />\n                <Circle\n                    x={x}\n                    y={y}\n                    radius={10}\n                    shadowBlur={1}\n                    fillPatternImage={this.state.fillPatternImage}\n                />\n            </Group>\n        );\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.animationTimeout);\n    }\n}\n/**\n * ref={comp => {\n                        this.ball = comp;\n                    }}\n <Group>\n <Rect\n x={0}\n y={0}\n width={WIDTH}\n height={HEIGHT}\n fill=\"rgb(0,0,0)\"\n shadowBlur={2}\n />\n <Rect\n x={2}\n y={2}\n width={WIDTH - 4}\n height={HEIGHT - 4}\n fillPatternImage={this.state.fillPatternImage}\n />\n </Group>\n\n\n */"]},"metadata":{},"sourceType":"module"}